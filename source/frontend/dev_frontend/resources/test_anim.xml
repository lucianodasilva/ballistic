<package>

  
  <effect name="default.effect">
    <vertex>
      <![CDATA[
      #version 330 core
      
      layout (location = 1) in vec3 in_position;
      layout (location = 2) in vec2 in_uv;
      layout (location = 3) in vec3 in_normal;
      
      uniform vec4        effect_diffuse;
      uniform vec4        effect_specular;
      uniform mat4        effect_t_model;
      uniform mat4        effect_t_view;
      uniform mat4        effect_t_proj;
      uniform mat4        effect_t_normal;
      uniform mat4        effect_t_mvp;

      out vec3            var_normal;
      out vec4            var_color;
      
      out vec2            var_uv;

      void main () {

    var_color = effect_diffuse;
    
        var_color = effect_diffuse;
    
        // test view + projection
        //mat4 mvp = effect_t_proj * effect_t_view * effect_t_model;
        //vec4 pos = mvp * vec4 (in_position, 1.0);
        
        vec4 pos = effect_t_mvp * vec4 (in_position, 1.0);
        
        var_normal = (effect_t_normal * vec4 (in_normal, 1.0)).xyz;
        
        var_uv = in_uv;
        // invert texture
        var_uv.y = 1.0 - var_uv.y;
    
        gl_Position = pos;
      }
      
      ]]>
    </vertex>
    <fragment>
      <![CDATA[
      #version 330 core
      
      uniform sampler2D   effect_texture;

      in vec3 var_normal;
      in vec4 var_color;
      in vec2 var_uv;
      out vec4 out_color;
      
      void main () {
      
        vec4 texture_color = texture (effect_texture, var_uv);
        out_color = texture_color;
    
        //float si = dot (var_normal, vec3 (.0, 1., .0));
        //
        //vec3 sky_color = vec3 (.6, .6, .7);
        //vec3 floor_color = vec3 (.3, .3, .2);
        //
        //vec3 tint = mix (floor_color, sky_color, si);
        //
        //out_color = vec4 (
        //  mix (var_color.rgb, tint, .5),
        //  1.
        // );
    
      }
      
      ]]>
    </fragment>
  </effect>
  
  

  <storyboard name="camera.animation">
    <vec3_bezier start_time="0"
                 duration="6"
                 repeat="repeat_reverse"
                 start="-50, 10, 10"
                 end="50, 10, 10"
                 control_1="-10, 10, 50"
                 control_2="10, 10, 50"
                 target_id="position"/>
  </storyboard>


  <storyboard name="cube.animation">
    <vec3_bezier start_time="0"
                 duration="0.5"
                 repeat="repeat_reverse"
                 start="0, 0, 0"
                 end="0, 1, 0"
                 control_1="0, 0.1, 0"
                 control_2="0, 0.9, 0"
                 target_id="bounce"/>
  </storyboard>
  
  <!-- This is a good possibility
  <trigger_storyboard name="trigger.animation">
    <trigger message="message_update" storyboard_id="cube.animation"/>
    <trigger message="end" storyboard_id="cube.animation"/>
  </trigger_storyboard>
  -->
  
  <texture name="cube.texture" min_filter="linear" mag_filter="linear" file="resources/box.png"/>

	<material name="cube.material" diffuse="0.800000,0.800000,0.800000,1." opaque="false" effect="default.effect" texture="cube.texture" />
	
   <mesh name="cube.mesh">
		<position>
      1.000000,1.000000,-1.000000,
      1.000000,-1.000000,-1.000000,
      -1.000000,-1.000000,-1.000000,
      -1.000000,1.000000,-1.000000,
      1.000000,0.999999,1.000000,
      -1.000000,1.000000,1.000000,
      -1.000000,-1.000000,1.000000,
      0.999999,-1.000001,1.000000,
      1.000000,1.000000,-1.000000,
      1.000000,0.999999,1.000000,
      0.999999,-1.000001,1.000000,
      1.000000,-1.000000,-1.000000,
      1.000000,-1.000000,-1.000000,
      0.999999,-1.000001,1.000000,
      -1.000000,-1.000000,1.000000,
      -1.000000,-1.000000,-1.000000,
      -1.000000,-1.000000,-1.000000,
      -1.000000,-1.000000,1.000000,
      -1.000000,1.000000,1.000000,
      -1.000000,1.000000,-1.000000,
      1.000000,0.999999,1.000000,
      1.000000,1.000000,-1.000000,
      -1.000000,1.000000,-1.000000,
      -1.000000,1.000000,1.000000
    </position>
		<normal>
      0.000000,0.000000,-1.000000,
      0.000000,0.000000,-1.000000,
      0.000000,0.000000,-1.000000,
      0.000000,0.000000,-1.000000,
      0.000000,-0.000000,1.000000,
      0.000000,-0.000000,1.000000,
      0.000000,-0.000000,1.000000,
      0.000000,-0.000000,1.000000,
      1.000000,-0.000000,0.000000,
      1.000000,-0.000000,0.000000,
      1.000000,-0.000000,0.000000,
      1.000000,-0.000000,0.000000,
      -0.000000,-1.000000,-0.000000,
      -0.000000,-1.000000,-0.000000,
      -0.000000,-1.000000,-0.000000,
      -0.000000,-1.000000,-0.000000,
      -1.000000,0.000000,-0.000000,
      -1.000000,0.000000,-0.000000,
      -1.000000,0.000000,-0.000000,
      -1.000000,0.000000,-0.000000,
      0.000000,1.000000,0.000000,
      0.000000,1.000000,0.000000,
      0.000000,1.000000,0.000000,
      0.000000,1.000000,0.000000
    </normal>
		<uv>
      0.000000,0.000000,
      1.000000,0.000000,
      1.000000,1.000000,
      0.000000,1.000000,
      0.000000,0.000000,
      1.000000,0.000000,
      1.000000,1.000000,
      0.000000,1.000000,
      0.000000,0.000000,
      1.000000,0.000000,
      1.000000,1.000000,
      0.000000,1.000000,
      0.000000,0.000000,
      1.000000,0.000000,
      1.000000,1.000000,
      0.000000,1.000000,
      0.000000,0.000000,
      1.000000,0.000000,
      1.000000,1.000000,
      0.000000,1.000000,
      0.000000,0.000000,
      1.000000,0.000000,
      1.000000,1.000000,
      0.000000,1.000000
    </uv>
		<index>
      0,1,2,
      0,2,3,
      4,5,6,
      4,6,7,
      8,9,10,
      8,10,11,
      12,13,14,
      12,14,15,
      16,17,18,
      16,18,19,
      20,21,22,
      20,22,23
    </index>
	</mesh>

  <entity_type name="camera.entity"
          position="0,0,5"
          target="0,0,0"
          up="0,1,0"
  >
    <graphics.camera projection="perspective" fov="45" near="0.1" far="100"/>
    <animation storyboard_id="camera.animation"/>
  </entity_type>

  <entity_type name="cube.entity"
      graphics.material.id="cube.material"
      graphics.mesh.id="cube.mesh"
   >
    <transform/>
    <graphics.visual/>
    <animation storyboard_id="cube.animation"/>
    <box_brain/>
  </entity_type>

</package>